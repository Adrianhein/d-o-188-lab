Practice Exam 4 - Containerfile, Create and push Container Image in registry


Create Containerfile - "Containerfile-MyDB"

1) use image mariadb:latest
2) copy test_db.sql file to /docker-entrypoint-initdb.d/ container directory
3) two build arguments:
   i)  DB_ROOT_PASSWD
   ii) DB_PASSWD
4) four environment variables
   i)   MYSQL_DATABASE, value - test
   ii)  MYSQL_USER, value - admin
   iii) MYSQL_ROOT_PASSWORD
   iv)  MYSQL_PASSWORD
5) MYSQL_ROOT_PASSWORD and MYSQL_PASSWORD will take values from build params DB_ROOT_PASSWD and DB_PASSWD respectively
6) expose to port 3306
   -create image from "Containerfile-MyDB" and pass build params 'admin' for both parameters and name image 'mariadb-with-test-db'
   -test database container (optional)
   -push image to repo -- docker.io/awspodmanuser/mariadb-with-test-db

   
#COMMAND#
#vim Containerfile-MyDB
#vim test_db.sql
#podman build -t mariadb-with-test-db -f Containerfile-MyDB --build-arg DB_ROOT_PASSWD=admin --build-arg DB_PASSWD=admin .
 
#podman tag localhost/mariadb-with-test-db docker.io/awspodmanuser/mariadb-with-test-db:latest
#podman push docker.io/awspodmanuser/mariadb-with-test-db

   
REF:https://www.youtube.com/watch?v=2xhx_iXcol0&list=PLnFCwVWiQz4lbdsIPt_eqnNd3-p2we0qd&index=5

## test_db.sql
create table if not exists test_db (id int not null auto_increment, name varchar(32) not null, primary key (id));
insert into test_db (name) values ('test_one'), ('test_two'), ('test_three');

