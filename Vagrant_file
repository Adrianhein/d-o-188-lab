Vagrant.configure("2") do |config|
    #config.vm.provider "vmware_desktop" do |vb|
    config.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
    end

    config.vm.define "registry.do188.lab" do |server|
      server.vm.box = "roboxes/centos9s"
      server.vm.hostname = "registry.do188.lab"
      server.vm.network "private_network", ip: "192.168.33.20"
      server.vm.provision "shell", inline: <<-SHELL
               echo " 192.168.33.20 registry.do188.lab" >> /etc/hosts
               echo " 192.168.33.30 client.do188.lab" >> /etc/hosts
               echo "vagrant" |passwd --stdin vagrant
               sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
               systemctl restart sshd
        SHELL
    end

    config.vm.define "client.do188.lab" do |server|
      server.vm.box = "roboxes/centos9s"
      server.vm.hostname = "registry.do188.lab"
      server.vm.network "private_network", ip: "192.168.33.30"
      server.vm.provision "shell", inline: <<-SHELL
               echo " 192.168.33.20 registry.do188.lab" >> /etc/hosts
               echo " 192.168.33.30 client.do188.lab" >> /etc/hosts
               echo "vagrant" |passwd --stdin vagrant
               sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
               systemctl restart sshd
        SHELL
    end


end

:'

  config.vm.box = "roboxes/centos9s"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
   config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
   config.vm.network "public_network"

  # Example for VirtualBox: config.vm.provider "virtualbox" do |vb|
  # Example for VMWareWorkStation: config.vm.provider "vmware_desktop" do |vb|
   config.vm.provider "vmware_desktop" do |vb|
     vb.memory = "1024"
   end

   config.vm.provision "shell", inline: <<-SHELL
     dnf update -y
     dnf install epel-release -y
     dnf install -y podman podman-compose telnet vim wget net-tools policycoreutils-python-utils
     hostnamectl set-hostname registry.do188.lab
     echo " $(hostname -i) registry.do180.lab" >> /etc/hosts
   SHELL
end
'
